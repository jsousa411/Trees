/*
Given two binary trees, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical and the nodes have the same value.

Example 1:

Input:     1         1
          / \       / \
         2   3     2   3

        [1,2,3],   [1,2,3]

Output: true
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public bool IsSameTree(TreeNode p, TreeNode q) {
        
        if(p == null && q == null)
            return true;
        else
            if((p!=null && q == null)||
               (p == null && q!=null))
                return false;
                
        
        
        if(p.val == q.val)
            if(IsSameTree(p.left,q.left))
                if(IsSameTree(p.right,q.right))
                    return true;
        
        return false;
        
        
        
    }
}
